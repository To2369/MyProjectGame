//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 material_color;             // Offset:   64 Size:    16 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 light_direction;            // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.xyzw
dcl_temps 9
dcl_indexableTemp x0[4], 4
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.texcoord.x; v2.y <- vin.texcoord.y; 
//   v3.x <- vin.bone_weights.x; v3.y <- vin.bone_weights.y; v3.z <- vin.bone_weights.z; v3.w <- vin.bone_weights.w; 
//   v4.x <- vin.bone_indices.x; v4.y <- vin.bone_indices.y; v4.z <- vin.bone_indices.z; v4.w <- vin.bone_indices.w; 
//   o4.x <- <main return value>.color.x; o4.y <- <main return value>.color.y; o4.z <- <main return value>.color.z; o4.w <- <main return value>.color.w; 
//   o3.x <- <main return value>.texcoord.x; o3.y <- <main return value>.texcoord.y; 
//   o2.x <- <main return value>.world_normal.x; o2.y <- <main return value>.world_normal.y; o2.z <- <main return value>.world_normal.z; o2.w <- <main return value>.world_normal.w; 
//   o1.x <- <main return value>.world_position.x; o1.y <- <main return value>.world_position.y; o1.z <- <main return value>.world_position.z; o1.w <- <main return value>.world_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w; 
//   x0 <- bone_colors
//
#line 5 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\ModelVS.hlsl"
mul r0.xyzw, cb0[0].xxxx, cb1[0].xyzw
mul r1.xyzw, cb0[0].yyyy, cb1[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].zzzz, cb1[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].wwww, cb1[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[1].xxxx, cb1[0].xyzw
mul r2.xyzw, cb0[1].yyyy, cb1[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].zzzz, cb1[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].wwww, cb1[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[2].xxxx, cb1[0].xyzw
mul r3.xyzw, cb0[2].yyyy, cb1[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].zzzz, cb1[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].wwww, cb1[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[3].xxxx, cb1[0].xyzw
mul r4.xyzw, cb0[3].yyyy, cb1[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].zzzz, cb1[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].wwww, cb1[3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r0.xyzw, r0.xyzw, v0.xxxx
mul r1.xyzw, r1.xyzw, v0.yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.xyzw, v0.zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r3.xyzw, v0.wwww
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 6
mul r1.xyzw, v0.xxxx, cb0[0].xyzw
mul r2.xyzw, v0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, v0.zzzz, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, v0.wwww, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- vout.world_position.x; r1.y <- vout.world_position.y; r1.z <- vout.world_position.z; r1.w <- vout.world_position.w

#line 7
itof r2.x, l(0)  // r2.x <- vin.normal.w

#line 8
mul r3.xyzw, v1.xxxx, cb0[0].xyzw
mul r4.xyzw, v1.yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, v1.zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r2.xxxx, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
dp4 r3.x, r2.xyzw, r2.xyzw
rsq r3.x, r3.x
mul r2.xyzw, r2.xyzw, r3.xxxx  // r2.x <- vout.world_normal.x; r2.y <- vout.world_normal.y; r2.z <- vout.world_normal.z; r2.w <- vout.world_normal.w

#line 9
mov r3.xy, v2.xyxx  // r3.x <- vout.texcoord.x; r3.y <- vout.texcoord.y

#line 13
itof r4.xyzw, l(0, 0, 0, 0)  // r4.x <- vout.color.x; r4.y <- vout.color.y; r4.z <- vout.color.z; r4.w <- vout.color.w

#line 14
itof r5.xyzw, l(1, 0, 0, 1)
itof r6.xyzw, l(0, 1, 0, 1)
itof r7.xyzw, l(0, 0, 1, 1)
itof r8.xyzw, l(1, 1, 1, 1)
mov x0[0].xyzw, r5.xyzw
mov x0[1].xyzw, r6.xyzw
mov x0[2].xyzw, r7.xyzw
mov x0[3].xyzw, r8.xyzw

#line 21
mov r3.z, l(0)  // r3.z <- bone_index
mov r5.xyzw, r4.xyzw  // r5.x <- vout.color.x; r5.y <- vout.color.y; r5.z <- vout.color.z; r5.w <- vout.color.w
mov r3.w, r3.z  // r3.w <- bone_index
loop 
  ilt r6.x, r3.w, l(4)
  breakc_z r6.x

#line 23
  and r6.xyzw, v4.xyzw, icb[r3.w + 4].xyzw
  or r6.xy, r6.ywyy, r6.xzxx
  or r6.x, r6.y, r6.x
  mov r6.y, l(4)
  udiv null, r6.x, r6.x, r6.y
  mov r6.xyzw, x0[r6.x + 0].xyzw
  dp4 r7.x, v3.xyzw, icb[r3.w + 0].xyzw
  mul r6.xyzw, r6.xyzw, r7.xxxx
  add r5.xyzw, r5.xyzw, r6.xyzw

#line 24
  iadd r3.w, r3.w, l(1)
endloop 

#line 26
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyzw, r2.xyzw
mov o4.xyzw, r5.xyzw
mov o3.xy, r3.xyxx
ret 
// Approximately 86 instruction slots used
