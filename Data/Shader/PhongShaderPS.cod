//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   float4 ka;                         // Offset:   64 Size:    16
//   float4 kd;                         // Offset:   80 Size:    16
//   float4 ks;                         // Offset:   96 Size:    16
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 options;                    // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 ambient_color;              // Offset:    0 Size:    16
//   float4 directional_light_direction;// Offset:   16 Size:    16
//   float4 directional_light_color;    // Offset:   32 Size:    16
//   
//   struct point_lights
//   {
//       
//       float4 position;               // Offset:   48
//       float4 color;                  // Offset:   64
//       float range;                   // Offset:   80
//       float3 dummy;                  // Offset:   84
//
//   } point_light[8];                  // Offset:   48 Size:   384
//   
//   struct spot_lights
//   {
//       
//       float4 position;               // Offset:  432
//       float4 direction;              // Offset:  448
//       float4 color;                  // Offset:  464
//       float range;                   // Offset:  480
//       float innerCorn;               // Offset:  484
//       float outerCorn;               // Offset:  488
//       float dummy;                   // Offset:  492
//
//   } spot_light[8];                   // Offset:  432 Size:   512
//
// }
//
// cbuffer HEMISPHERE_LLIGHT_CONSTANT_BUFFER
// {
//
//   float4 sky_color;                  // Offset:    0 Size:    16
//   float4 ground_color;               // Offset:   16 Size:    16
//   float4 hemisphere_weight;          // Offset:   32 Size:    16
//
// }
//
// cbuffer FOG_CONSTANT_BUFFER
// {
//
//   float4 fog_color;                  // Offset:    0 Size:    16
//   float4 fog_range;                  // Offset:   16 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// color_sampler_states[2]           sampler      NA          NA             s2      1 
// color_map                         texture  float4          2d             t0      1 
// normal_map                        texture  float4          2d             t1      1 
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
// HEMISPHERE_LLIGHT_CONSTANT_BUFFER    cbuffer      NA          NA            cb4      1 
// FOG_CONSTANT_BUFFER               cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float   xyz 
// BINORMAL                 0   xyz         3     NONE   float   xyz 
// NORMAL                   0   xyz         4     NONE   float   xyz 
// TEXCOORD                 0   xy          5     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[7], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB4[3], immediateIndexed
dcl_constantbuffer CB5[2], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 17
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.world_position.x; v1.y <- pin.world_position.y; v1.z <- pin.world_position.z; v1.w <- pin.world_position.w; 
//   v2.x <- pin.tangent.x; v2.y <- pin.tangent.y; v2.z <- pin.tangent.z; 
//   v3.x <- pin.binormal.x; v3.y <- pin.binormal.y; v3.z <- pin.binormal.z; 
//   v4.x <- pin.normal.x; v4.y <- pin.normal.y; v4.z <- pin.normal.z; 
//   v5.x <- pin.texcoord.x; v5.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 11 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v5.xyxx, t0.xyzw, s2  // r0.x <- diffuse_color.x; r0.y <- diffuse_color.y; r0.z <- diffuse_color.z; r0.w <- diffuse_color.w

#line 13
mov r1.xyz, -cb1[5].xyzx
add r1.xyz, r1.xyzx, v1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z

#line 14
dp3 r1.w, cb2[1].xyzx, cb2[1].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb2[1].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 15
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v3.xyzx
dp3 r1.w, v4.xyzx, v4.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, v4.xyzx
mov r6.x, r3.x  // r6.x <- mat._m00
mov r6.y, r4.x  // r6.y <- mat._m10
mov r6.z, r5.x  // r6.z <- mat._m20
mov r7.x, r3.y  // r7.x <- mat._m01
mov r7.y, r4.y  // r7.y <- mat._m11
mov r7.z, r5.y  // r7.z <- mat._m21
mov r5.x, r3.z  // r5.x <- mat._m02
mov r5.y, r4.z  // r5.y <- mat._m12
mov r5.z, r5.z  // r5.z <- mat._m22

#line 16
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t1.xyzw, s2
mov r3.xyz, r3.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 19
mul r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r4.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r4.x, r3.xyzx, r6.xyzx
dp3 r4.y, r3.xyzx, r7.xyzx
dp3 r4.z, r3.xyzx, r5.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx

#line 21
mul r4.xyz, cb0[4].xyzx, cb2[0].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 22
nop 
mov r3.xyz, r3.xyzx
itof r5.xyz, l(0, 1, 0, 0)
mov r6.xyz, cb4[0].xyzx
mov r7.xyz, cb4[1].xyzx
mov r1.w, cb4[2].x

#line 98 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
dp3 r2.w, r3.xyzx, r5.xyzx
mul r2.w, r2.w, l(0.500000)
add r2.w, r2.w, l(0.500000)  // r2.w <- factor

#line 99
mov r5.xyz, -r7.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r5.xyz, r2.wwww, r5.xyzx
add r5.xyz, r5.xyzx, r7.xyzx
mul r5.xyz, r1.wwww, r5.xyzx  // r5.x <- <CalcHemiSphereLight return value>.x; r5.y <- <CalcHemiSphereLight return value>.y; r5.z <- <CalcHemiSphereLight return value>.z

#line 22 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
add r4.xyz, r4.xyzx, r5.xyzx

#line 25
nop 
mov r3.xyz, r3.xyzx
mov r2.xyz, r2.xyzx
mov r5.xyz, cb2[2].xyzx
mov r6.xyz, cb0[5].xyzx

#line 39 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
mov r7.xyz, -r2.xyzx
dp3 r1.w, r3.xyzx, r7.xyzx
mul r1.w, r1.w, l(0.500000)
add r1.w, r1.w, l(0.500000)
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(1.000000)  // r1.w <- D

#line 40
mul r5.xyz, r1.wwww, r5.xyzx
mul r5.xyz, r6.xyzx, r5.xyzx  // r5.x <- <ClacHalfLambert return value>.x; r5.y <- <ClacHalfLambert return value>.y; r5.z <- <ClacHalfLambert return value>.z

#line 25 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
mov r5.xyz, r5.xyzx  // r5.x <- directional_diffuse.x; r5.y <- directional_diffuse.y; r5.z <- directional_diffuse.z

#line 26
nop 
mov r3.xyz, r3.xyzx
mov r2.xyz, r2.xyzx
mov r1.xyz, r1.xyzx
mov r6.xyz, cb2[2].xyzx
mov r7.xyz, cb0[6].xyzx

#line 24 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
dp3 r1.w, r2.xyzx, r3.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r8.xyz, r1.wwww, r3.xyzx
add r2.xyz, r2.xyzx, r8.xyzx  // r2.x <- R.x; r2.y <- R.y; r2.z <- R.z

#line 25
mov r8.xyz, -r1.xyzx
dp3 r1.w, r8.xyzx, r2.xyzx
itof r2.x, l(0)
max r1.w, r1.w, r2.x  // r1.w <- power

#line 26
itof r2.x, l(128)
log r1.w, r1.w
mul r1.w, r1.w, r2.x
exp r1.w, r1.w  // r1.w <- power

#line 27
mul r2.xyz, r1.wwww, r6.xyzx
mul r2.xyz, r7.xyzx, r2.xyzx  // r2.x <- <CalcPhongSpecular return value>.x; r2.y <- <CalcPhongSpecular return value>.y; r2.z <- <CalcPhongSpecular return value>.z

#line 26 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- directional_specular.x; r2.y <- directional_specular.y; r2.z <- directional_specular.z

#line 29
itof r6.xyz, l(0, 0, 0, 0)  // r6.x <- point_diffuse.x; r6.y <- point_diffuse.y; r6.z <- point_diffuse.z

#line 30
itof r7.xyz, l(0, 0, 0, 0)  // r7.x <- point_specular.x; r7.y <- point_specular.y; r7.z <- point_specular.z

#line 31
mov r1.w, l(0)  // r1.w <- i
mov r8.xyz, r6.xyzx  // r8.x <- point_diffuse.x; r8.y <- point_diffuse.y; r8.z <- point_diffuse.z
mov r9.xyz, r7.xyzx  // r9.x <- point_specular.x; r9.y <- point_specular.y; r9.z <- point_specular.z
mov r2.w, r1.w  // r2.w <- i
loop 
  ilt r3.w, r2.w, l(8)
  breakc_z r3.w

#line 33
  imul null, r3.w, r2.w, l(3)
  mov r10.xyz, -cb2[r3.w + 3].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- LP.x; r10.y <- LP.y; r10.z <- LP.z

#line 34
  dp3 r3.w, r10.xyzx, r10.xyzx
  sqrt r3.w, r3.w  // r3.w <- len

#line 35
  imul null, r4.w, r2.w, l(3)
  ge r4.w, r3.w, cb2[r4.w + 5].x
  if_nz r4.w

#line 36
    iadd r2.w, r2.w, l(1)
    continue 
  endif 

#line 37
  imul null, r4.w, r2.w, l(3)
  div r4.w, r3.w, cb2[r4.w + 5].x
  mov r4.w, -r4.w
  add r4.w, r4.w, l(1.000000)
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // r4.w <- attenuateLength

#line 38
  mul r4.w, r4.w, r4.w  // r4.w <- attenuation

#line 39
  div r10.xyz, r10.xyzx, r3.wwww

#line 40
  nop 
  mov r11.xyz, r3.xyzx
  mov r10.xyz, r10.xyzx
  imul null, r3.w, r2.w, l(3)
  mov r12.xyz, cb2[r3.w + 4].xyzx
  mov r13.xyz, cb0[5].xyzx

#line 10 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
  mov r14.xyz, -r10.xyzx
  dp3 r3.w, r11.xyzx, r14.xyzx
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)  // r3.w <- power

#line 11
  mul r11.xyz, r3.wwww, r12.xyzx
  mul r11.xyz, r13.xyzx, r11.xyzx  // r11.x <- <CalcLambert return value>.x; r11.y <- <CalcLambert return value>.y; r11.z <- <CalcLambert return value>.z

#line 40 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
  mul r11.xyz, r4.wwww, r11.xyzx
  add r8.xyz, r8.xyzx, r11.xyzx

#line 41
  nop 
  mov r11.xyz, r3.xyzx
  mov r10.xyz, r10.xyzx
  mov r12.xyz, r1.xyzx
  imul null, r3.w, r2.w, l(3)
  mov r13.xyz, cb2[r3.w + 4].xyzx
  mov r14.xyz, cb0[6].xyzx

#line 24 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
  dp3 r3.w, r10.xyzx, r11.xyzx
  add r3.w, r3.w, r3.w
  mov r3.w, -r3.w
  mul r11.xyz, r3.wwww, r11.xyzx
  add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 25
  mov r11.xyz, -r12.xyzx
  dp3 r3.w, r11.xyzx, r10.xyzx
  itof r5.w, l(0)
  max r3.w, r3.w, r5.w  // r3.w <- power

#line 26
  itof r5.w, l(128)
  log r3.w, r3.w
  mul r3.w, r3.w, r5.w
  exp r3.w, r3.w  // r3.w <- power

#line 27
  mul r10.xyz, r3.wwww, r13.xyzx
  mul r10.xyz, r14.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 41 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
  mul r10.xyz, r4.wwww, r10.xyzx
  add r9.xyz, r9.xyzx, r10.xyzx

#line 31
  iadd r2.w, r2.w, l(1)

#line 42
endloop 

#line 45
itof r6.xyz, l(0, 0, 0, 0)  // r6.x <- spot_diffuse.x; r6.y <- spot_diffuse.y; r6.z <- spot_diffuse.z

#line 46
itof r7.xyz, l(0, 0, 0, 0)  // r7.x <- spot_specular.x; r7.y <- spot_specular.y; r7.z <- spot_specular.z

#line 47
mov r1.w, l(0)  // r1.w <- j
mov r10.xyz, r6.xyzx  // r10.x <- spot_diffuse.x; r10.y <- spot_diffuse.y; r10.z <- spot_diffuse.z
mov r11.xyz, r7.xyzx  // r11.x <- spot_specular.x; r11.y <- spot_specular.y; r11.z <- spot_specular.z
mov r2.w, r1.w  // r2.w <- j
loop 
  ilt r3.w, r2.w, l(8)
  breakc_z r3.w

#line 49
  imul null, r3.w, r2.w, l(4)
  mov r12.xyz, -cb2[r3.w + 27].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- LP.x; r12.y <- LP.y; r12.z <- LP.z

#line 50
  dp3 r3.w, r12.xyzx, r12.xyzx
  sqrt r3.w, r3.w  // r3.w <- len

#line 51
  imul null, r4.w, r2.w, l(4)
  ge r4.w, r3.w, cb2[r4.w + 30].x
  if_nz r4.w

#line 52
    iadd r2.w, r2.w, l(1)
    continue 
  endif 

#line 53
  imul null, r4.w, r2.w, l(4)
  div r4.w, r3.w, cb2[r4.w + 30].x
  mov r4.w, -r4.w
  add r4.w, r4.w, l(1.000000)
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // r4.w <- attenuateLength

#line 54
  mul r4.w, r4.w, r4.w  // r4.w <- attenuation

#line 55
  div r12.xyz, r12.xyzx, r3.wwww

#line 56
  imul null, r3.w, r2.w, l(4)
  dp3 r5.w, cb2[r3.w + 28].xyzx, cb2[r3.w + 28].xyzx
  rsq r5.w, r5.w
  mul r13.xyz, r5.wwww, cb2[r3.w + 28].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 57
  dp3 r3.w, r13.xyzx, r12.xyzx  // r3.w <- angle

#line 58
  imul null, r5.w, r2.w, l(4)
  imul null, r6.w, r2.w, l(4)
  mov r6.w, -cb2[r6.w + 30].z
  add r5.w, r6.w, cb2[r5.w + 30].y  // r5.w <- area

#line 59
  imul null, r6.w, r2.w, l(4)
  mov r3.w, -r3.w
  add r3.w, r3.w, cb2[r6.w + 30].y
  div r3.w, r3.w, r5.w
  mov r3.w, -r3.w
  add r3.w, r3.w, l(1.000000)
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mul r3.w, r3.w, r4.w  // r3.w <- attenuation

#line 60
  nop 
  mov r13.xyz, r3.xyzx
  mov r12.xyz, r12.xyzx
  imul null, r4.w, r2.w, l(4)
  mov r14.xyz, cb2[r4.w + 29].xyzx
  mov r15.xyz, cb0[5].xyzx

#line 10 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
  mov r16.xyz, -r12.xyzx
  dp3 r4.w, r13.xyzx, r16.xyzx
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // r4.w <- power

#line 11
  mul r13.xyz, r4.wwww, r14.xyzx
  mul r13.xyz, r15.xyzx, r13.xyzx  // r13.x <- <CalcLambert return value>.x; r13.y <- <CalcLambert return value>.y; r13.z <- <CalcLambert return value>.z

#line 60 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
  mul r13.xyz, r3.wwww, r13.xyzx
  add r10.xyz, r10.xyzx, r13.xyzx

#line 61
  nop 
  mov r13.xyz, r3.xyzx
  mov r12.xyz, r12.xyzx
  mov r14.xyz, r1.xyzx
  imul null, r4.w, r2.w, l(4)
  mov r15.xyz, cb2[r4.w + 29].xyzx
  mov r16.xyz, cb0[6].xyzx

#line 24 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
  dp3 r4.w, r12.xyzx, r13.xyzx
  add r4.w, r4.w, r4.w
  mov r4.w, -r4.w
  mul r13.xyz, r4.wwww, r13.xyzx
  add r12.xyz, r12.xyzx, r13.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 25
  mov r13.xyz, -r14.xyzx
  dp3 r4.w, r13.xyzx, r12.xyzx
  itof r5.w, l(0)
  max r4.w, r4.w, r5.w  // r4.w <- power

#line 26
  itof r5.w, l(128)
  log r4.w, r4.w
  mul r4.w, r4.w, r5.w
  exp r4.w, r4.w  // r4.w <- power

#line 27
  mul r12.xyz, r4.wwww, r15.xyzx
  mul r12.xyz, r16.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 61 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
  mul r12.xyz, r3.wwww, r12.xyzx
  add r11.xyz, r11.xyzx, r12.xyzx

#line 47
  iadd r2.w, r2.w, l(1)

#line 62
endloop 

#line 63
mov r4.xyz, r4.xyzx  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z
mov r0.w, r0.w  // r0.w <- color.w

#line 64
add r1.xyz, r5.xyzx, r8.xyzx
add r1.xyz, r10.xyzx, r1.xyzx
mul r1.xyz, r0.xyzx, r1.xyzx
add r1.xyz, r1.xyzx, r4.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 65
add r2.xyz, r2.xyzx, r11.xyzx
add r2.xyz, r9.xyzx, r2.xyzx
add r0.xyz, r1.xyzx, r2.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 73
nop 
mov r0.xyz, r0.xyzx
mov r0.w, r0.w
mov r1.xyzw, cb5[0].xyzw
mov r2.xy, cb5[1].xyxx
mov r3.xyz, -cb1[5].xyzx
add r3.xyz, r3.xyzx, v1.xyzx
dp3 r2.z, r3.xyzx, r3.xyzx
sqrt r2.z, r2.z

#line 111 "C:\Users\2220082\OneDrive - yamaguchigakuen\デスクトップ\MyProjectGame\HLSL\ShadingFunctions.hlsli"
mov r2.w, -r2.x
add r2.z, r2.w, r2.z
mov r2.x, -r2.x
add r2.x, r2.x, r2.y
div r2.x, r2.z, r2.x
max r2.x, r2.x, l(0.000000)
min r2.x, r2.x, l(1.000000)  // r2.x <- fogAlpha

#line 112
mov r3.xyzw, -r0.xyzw
add r1.xyzw, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, r2.xxxx
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- <CalcFog return value>.x; r0.y <- <CalcFog return value>.y; r0.z <- <CalcFog return value>.z; r0.w <- <CalcFog return value>.w

#line 73 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderPS.hlsl"
mov r0.xyzw, r0.xyzw  // r0.w <- color.w; r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 74
mov o0.xyzw, r0.xyzw
ret 
// Approximately 276 instruction slots used
