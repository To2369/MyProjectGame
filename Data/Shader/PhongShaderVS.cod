//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 ka;                         // Offset:   64 Size:    16 [unused]
//   float4 kd;                         // Offset:   80 Size:    16 [unused]
//   float4 ks;                         // Offset:   96 Size:    16 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   float4 options;                    // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; v1.w <- normal.w; 
//   v2.x <- texcoord.x; v2.y <- texcoord.y; 
//   o3.x <- <main return value>.texcoord.x; o3.y <- <main return value>.texcoord.y; 
//   o2.x <- <main return value>.world_normal.x; o2.y <- <main return value>.world_normal.y; o2.z <- <main return value>.world_normal.z; o2.w <- <main return value>.world_normal.w; 
//   o1.x <- <main return value>.world_position.x; o1.y <- <main return value>.world_position.y; o1.z <- <main return value>.world_position.z; o1.w <- <main return value>.world_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 6 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\PhongShaderVS.hlsl"
mul r0.xyzw, v0.xxxx, cb0[0].xyzw
mul r1.xyzw, v0.yyyy, cb0[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.zzzz, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- world_position.x; r0.y <- world_position.y; r0.z <- world_position.z; r0.w <- world_position.w

#line 7
mul r1.xyzw, r0.xxxx, cb1[0].xyzw
mul r2.xyzw, r0.yyyy, cb1[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb1[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.wwww, cb1[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- vout.position.x; r1.y <- vout.position.y; r1.z <- vout.position.z; r1.w <- vout.position.w

#line 8
mov r0.xyzw, r0.xyzw  // r0.x <- vout.world_position.x; r0.y <- vout.world_position.y; r0.z <- vout.world_position.z; r0.w <- vout.world_position.w

#line 9
itof r2.x, l(0)
mul r3.xyzw, v1.xxxx, cb0[0].xyzw
mul r4.xyzw, v1.yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, v1.zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r2.xxxx, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
dp4 r3.x, r2.xyzw, r2.xyzw
rsq r3.x, r3.x
mul r2.xyzw, r2.xyzw, r3.xxxx  // r2.x <- vout.world_normal.x; r2.y <- vout.world_normal.y; r2.z <- vout.world_normal.z; r2.w <- vout.world_normal.w

#line 10
mov r3.xy, v2.xyxx  // r3.x <- vout.texcoord.x; r3.y <- vout.texcoord.y

#line 11
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyzw, r2.xyzw
mov o3.xy, r3.xyxx
ret 
// Approximately 32 instruction slots used
