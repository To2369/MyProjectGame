//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// COLOR                    0   xyzw        1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 4 "C:\Users\2220082\OneDrive - yamaguchigakuen\チEクトップ\MyProjectGame\HLSL\Sprite_ps.hlsl"
itof r0.xy, l(640, 360, 0, 0)  // r0.x <- center.x; r0.y <- center.y

#line 5
mov r0.zw, -v0.xxxy
add r0.xy, r0.zwzz, r0.xyxx
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x  // r0.x <- distance

#line 6
itof r0.y, l(200)
lt r0.x, r0.y, r0.x
if_nz r0.x

#line 7
  itof o0.xyzw, l(1, 1, 1, 1)
  ret 
else 

#line 9
  itof o0.xyzw, l(1, 0, 0, 1)  // o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
  ret 
endif 
ret 
// Approximately 15 instruction slots used
